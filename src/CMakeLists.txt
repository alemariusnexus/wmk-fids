CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(wmk-fids C CXX)


IF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/nxcommon/src/CMakeLists.txt")
    SET(NXCOMMON_BUILDING ON)
ENDIF(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/nxcommon/src/CMakeLists.txt")

IF(NXCOMMON_BUILDING)
    MESSAGE(STATUS "Building integrated nxcommon.")
    ADD_SUBDIRECTORY(nxcommon/src nxcommon/build)
ENDIF()

IF(NOT TARGET nxcommon)
    FIND_PACKAGE(Nxcommon REQUIRED CONFIG)
ENDIF()

FIND_PACKAGE(Qt5Core)
FIND_PACKAGE(Qt5Widgets)

INCLUDE(NxUtilities)

SET(LIBRARIES nxcommon)
SET(INCLUDES "${CMAKE_CURRENT_BINARY_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}")

SET(LIBRARIES ${LIBRARIES} Qt5::Core Qt5::Widgets)

IF(WIN32)
    SET(LIBRARIES ${LIBRARIES} Qt5::WinMain)
ENDIF()


SET(SRCS "")
SET(INCS "")

ADD_SUBDIRECTORY(fids)


QT5_WRAP_CPP(MOC_COMPILED_SRCS ${MOC_SRCS})
QT5_WRAP_UI(UIC_COMPILED_SRCS ${UIC_SRCS})

SET(EXECUTABLE_PROPERTIES "")
IF(WIN32)
    SET(EXECUTABLE_PROPERTIES "WIN32")
ELSEIF(APPLE)
    SET(EXECUTABLE_PROPERTIES "MACOSX_BUNDLE")
ENDIF(WIN32)


INCLUDE_DIRECTORIES(${INCLUDES})

ADD_EXECUTABLE(wmk-fids ${EXECUTABLE_PROPERTIES} ${SRCS} ${MOC_COMPILED_SRCS} ${UIC_COMPILED_SRCS} ${QM_FILES}
        ${QT_RESOURCE_FILES})
TARGET_LINK_LIBRARIES(wmk-fids ${LIBRARIES})

INSTALL(TARGETS wmk-fids DESTINATION bin)
